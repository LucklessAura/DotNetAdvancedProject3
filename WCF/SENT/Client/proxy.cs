//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/Project1", IsReference=true)]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Project1.AditionalFilePropriety[] AditionalFileProprietiesField;
        
        private string DateCreatedField;
        
        private bool DeletedField;
        
        private int FileIdField;
        
        private string FileNameField;
        
        private string FilePathField;
        
        private string OcasionField;
        
        private string PeopleField;
        
        private string PlaceField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project1.AditionalFilePropriety[] AditionalFileProprieties
        {
            get
            {
                return this.AditionalFileProprietiesField;
            }
            set
            {
                this.AditionalFileProprietiesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                this.DateCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath
        {
            get
            {
                return this.FilePathField;
            }
            set
            {
                this.FilePathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ocasion
        {
            get
            {
                return this.OcasionField;
            }
            set
            {
                this.OcasionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string People
        {
            get
            {
                return this.PeopleField;
            }
            set
            {
                this.PeopleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place
        {
            get
            {
                return this.PlaceField;
            }
            set
            {
                this.PlaceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AditionalFilePropriety", Namespace="http://schemas.datacontract.org/2004/07/Project1", IsReference=true)]
    public partial class AditionalFilePropriety : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AditionalFileProprietyIdField;
        
        private Project1.File FileField;
        
        private int ForeignFileIdField;
        
        private string ProprietyNameField;
        
        private string ProprietyValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AditionalFileProprietyId
        {
            get
            {
                return this.AditionalFileProprietyIdField;
            }
            set
            {
                this.AditionalFileProprietyIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project1.File File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForeignFileId
        {
            get
            {
                return this.ForeignFileIdField;
            }
            set
            {
                this.ForeignFileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProprietyName
        {
            get
            {
                return this.ProprietyNameField;
            }
            set
            {
                this.ProprietyNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProprietyValue
        {
            get
            {
                return this.ProprietyValueField;
            }
            set
            {
                this.ProprietyValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="interfaceClasses")]
public interface interfaceClasses
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/AddNewFile", ReplyAction="http://tempuri.org/interfaceClasses/AddNewFileResponse")]
    void AddNewFile(System.Collections.Generic.Dictionary<string, string> newFile);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/AddNewFile", ReplyAction="http://tempuri.org/interfaceClasses/AddNewFileResponse")]
    System.Threading.Tasks.Task AddNewFileAsync(System.Collections.Generic.Dictionary<string, string> newFile);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/AddNewPropriety", ReplyAction="http://tempuri.org/interfaceClasses/AddNewProprietyResponse")]
    void AddNewPropriety(Project1.File file, string proprietyName, string proprietyValue);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/AddNewPropriety", ReplyAction="http://tempuri.org/interfaceClasses/AddNewProprietyResponse")]
    System.Threading.Tasks.Task AddNewProprietyAsync(Project1.File file, string proprietyName, string proprietyValue);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/CopyFilesToPath", ReplyAction="http://tempuri.org/interfaceClasses/CopyFilesToPathResponse")]
    bool CopyFilesToPath(string path, int[] filesIds);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/CopyFilesToPath", ReplyAction="http://tempuri.org/interfaceClasses/CopyFilesToPathResponse")]
    System.Threading.Tasks.Task<bool> CopyFilesToPathAsync(string path, int[] filesIds);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/DefinitiveDelete", ReplyAction="http://tempuri.org/interfaceClasses/DefinitiveDeleteResponse")]
    bool DefinitiveDelete(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/DefinitiveDelete", ReplyAction="http://tempuri.org/interfaceClasses/DefinitiveDeleteResponse")]
    System.Threading.Tasks.Task<bool> DefinitiveDeleteAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/DeleteFile", ReplyAction="http://tempuri.org/interfaceClasses/DeleteFileResponse")]
    bool DeleteFile(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/DeleteFile", ReplyAction="http://tempuri.org/interfaceClasses/DeleteFileResponse")]
    System.Threading.Tasks.Task<bool> DeleteFileAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/GetFileProprieties", ReplyAction="http://tempuri.org/interfaceClasses/GetFileProprietiesResponse")]
    System.Collections.Generic.Dictionary<string, string> GetFileProprieties(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/GetFileProprieties", ReplyAction="http://tempuri.org/interfaceClasses/GetFileProprietiesResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetFileProprietiesAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/ModifyFile", ReplyAction="http://tempuri.org/interfaceClasses/ModifyFileResponse")]
    void ModifyFile(int id, System.Collections.Generic.Dictionary<string, string> newProprieties);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/ModifyFile", ReplyAction="http://tempuri.org/interfaceClasses/ModifyFileResponse")]
    System.Threading.Tasks.Task ModifyFileAsync(int id, System.Collections.Generic.Dictionary<string, string> newProprieties);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/MoveFilesToPath", ReplyAction="http://tempuri.org/interfaceClasses/MoveFilesToPathResponse")]
    bool MoveFilesToPath(string path, int[] filesId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/MoveFilesToPath", ReplyAction="http://tempuri.org/interfaceClasses/MoveFilesToPathResponse")]
    System.Threading.Tasks.Task<bool> MoveFilesToPathAsync(string path, int[] filesId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/Restore", ReplyAction="http://tempuri.org/interfaceClasses/RestoreResponse")]
    void Restore(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/Restore", ReplyAction="http://tempuri.org/interfaceClasses/RestoreResponse")]
    System.Threading.Tasks.Task RestoreAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/SearchFiles", ReplyAction="http://tempuri.org/interfaceClasses/SearchFilesResponse")]
    System.ValueTuple<Project1.File[], Project1.File[]> SearchFiles(System.Collections.Generic.Dictionary<string, string> proprieties);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/SearchFiles", ReplyAction="http://tempuri.org/interfaceClasses/SearchFilesResponse")]
    System.Threading.Tasks.Task<System.ValueTuple<Project1.File[], Project1.File[]>> SearchFilesAsync(System.Collections.Generic.Dictionary<string, string> proprieties);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/SendEmail", ReplyAction="http://tempuri.org/interfaceClasses/SendEmailResponse")]
    void SendEmail(string to, string from, string subject, string body, int[] filesIds, string email, string emailPassword);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/interfaceClasses/SendEmail", ReplyAction="http://tempuri.org/interfaceClasses/SendEmailResponse")]
    System.Threading.Tasks.Task SendEmailAsync(string to, string from, string subject, string body, int[] filesIds, string email, string emailPassword);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface interfaceClassesChannel : interfaceClasses, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class interfaceClassesClient : System.ServiceModel.ClientBase<interfaceClasses>, interfaceClasses
{
    
    public interfaceClassesClient()
    {
    }
    
    public interfaceClassesClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public interfaceClassesClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public interfaceClassesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public interfaceClassesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void AddNewFile(System.Collections.Generic.Dictionary<string, string> newFile)
    {
        base.Channel.AddNewFile(newFile);
    }
    
    public System.Threading.Tasks.Task AddNewFileAsync(System.Collections.Generic.Dictionary<string, string> newFile)
    {
        return base.Channel.AddNewFileAsync(newFile);
    }
    
    public void AddNewPropriety(Project1.File file, string proprietyName, string proprietyValue)
    {
        base.Channel.AddNewPropriety(file, proprietyName, proprietyValue);
    }
    
    public System.Threading.Tasks.Task AddNewProprietyAsync(Project1.File file, string proprietyName, string proprietyValue)
    {
        return base.Channel.AddNewProprietyAsync(file, proprietyName, proprietyValue);
    }
    
    public bool CopyFilesToPath(string path, int[] filesIds)
    {
        return base.Channel.CopyFilesToPath(path, filesIds);
    }
    
    public System.Threading.Tasks.Task<bool> CopyFilesToPathAsync(string path, int[] filesIds)
    {
        return base.Channel.CopyFilesToPathAsync(path, filesIds);
    }
    
    public bool DefinitiveDelete(int id)
    {
        return base.Channel.DefinitiveDelete(id);
    }
    
    public System.Threading.Tasks.Task<bool> DefinitiveDeleteAsync(int id)
    {
        return base.Channel.DefinitiveDeleteAsync(id);
    }
    
    public bool DeleteFile(int id)
    {
        return base.Channel.DeleteFile(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeleteFileAsync(int id)
    {
        return base.Channel.DeleteFileAsync(id);
    }
    
    public System.Collections.Generic.Dictionary<string, string> GetFileProprieties(int id)
    {
        return base.Channel.GetFileProprieties(id);
    }
    
    public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetFileProprietiesAsync(int id)
    {
        return base.Channel.GetFileProprietiesAsync(id);
    }
    
    public void ModifyFile(int id, System.Collections.Generic.Dictionary<string, string> newProprieties)
    {
        base.Channel.ModifyFile(id, newProprieties);
    }
    
    public System.Threading.Tasks.Task ModifyFileAsync(int id, System.Collections.Generic.Dictionary<string, string> newProprieties)
    {
        return base.Channel.ModifyFileAsync(id, newProprieties);
    }
    
    public bool MoveFilesToPath(string path, int[] filesId)
    {
        return base.Channel.MoveFilesToPath(path, filesId);
    }
    
    public System.Threading.Tasks.Task<bool> MoveFilesToPathAsync(string path, int[] filesId)
    {
        return base.Channel.MoveFilesToPathAsync(path, filesId);
    }
    
    public void Restore(int id)
    {
        base.Channel.Restore(id);
    }
    
    public System.Threading.Tasks.Task RestoreAsync(int id)
    {
        return base.Channel.RestoreAsync(id);
    }
    
    public System.ValueTuple<Project1.File[], Project1.File[]> SearchFiles(System.Collections.Generic.Dictionary<string, string> proprieties)
    {
        return base.Channel.SearchFiles(proprieties);
    }
    
    public System.Threading.Tasks.Task<System.ValueTuple<Project1.File[], Project1.File[]>> SearchFilesAsync(System.Collections.Generic.Dictionary<string, string> proprieties)
    {
        return base.Channel.SearchFilesAsync(proprieties);
    }
    
    public void SendEmail(string to, string from, string subject, string body, int[] filesIds, string email, string emailPassword)
    {
        base.Channel.SendEmail(to, from, subject, body, filesIds, email, emailPassword);
    }
    
    public System.Threading.Tasks.Task SendEmailAsync(string to, string from, string subject, string body, int[] filesIds, string email, string emailPassword)
    {
        return base.Channel.SendEmailAsync(to, from, subject, body, filesIds, email, emailPassword);
    }
}
